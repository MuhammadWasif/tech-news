type Query {
  message: String!
  user(username: String!): User
  links: [Link!]!
  link(id: ID!): Link!
  comment(parentID: ID!): [Comment]!
}

type Mutation {
  createUser(username: String, email: String, password: String): AuthPayload!
  createLink(url: String!, description: String!): Link!
  login(username: String!, password: String!): AuthPayload!
  postComment(text: String!, repliedTo: ID!): Comment!
  deleteComment(id: ID!): Comment!
  upvoteLink(id: ID!): Link!
  upvoteComment(id: ID!): Comment!
}

type User {
  id: ID!
  username: String!
  email: String!
  createdAt: String!
  links: [Link]!
  points: Int!
}

type Link {
  id: ID!
  url: String!
  description: String!
  createdAt: String!
  postedBy: User!
  votes: [User]!
  comments: [Comment]!
}

type Comment {
  id: ID!
  text: String!
  createdAt: String!
  postedBy: User!
  votes: [User]!
  repliedTo: ID!
}

type AuthPayload {
  user: User!
  token: String!
}
